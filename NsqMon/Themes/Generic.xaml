<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ed="clr-namespace:Microsoft.Expression.Shapes;assembly=Microsoft.Expression.Drawing" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:controls="clr-namespace:NsqMon.Controls"
    mc:Ignorable="d"    
>

    <Style TargetType="controls:ErrorNotification">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ErrorNotification">
                    <Grid x:Name="LayoutRoot">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden" />
                                <VisualState x:Name="Shown">
                                    <Storyboard>
                                        <DoubleAnimation To="30" Duration="0:0:0.4" Storyboard.TargetName="NotificationContainer" Storyboard.TargetProperty="Height">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation To="0" Duration="0:0:0.4" Storyboard.TargetName="ShowDetailsButtonCompositeTransform" Storyboard.TargetProperty="Angle">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation To="0" Duration="0:0:0.4" Storyboard.TargetName="DetailsTextBox" Storyboard.TargetProperty="Height">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowDetails">
                                    <Storyboard>
                                        <DoubleAnimation To="146" Duration="0:0:0.4" Storyboard.TargetName="NotificationContainer" Storyboard.TargetProperty="Height">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation To="-180" Duration="0:0:0.4" Storyboard.TargetName="ShowDetailsButtonCompositeTransform" Storyboard.TargetProperty="Angle">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation To="100" Duration="0:0:0.4" Storyboard.TargetName="DetailsTextBox" Storyboard.TargetProperty="Height">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.Resources>
                            <Color x:Key="StandardColor">#FF808080</Color>
                            <Color x:Key="BackgroundColor">Transparent</Color>
                            <Color x:Key="HoverColor">#FFCCCCCC</Color>
                            <Color x:Key="PressedColor">#FFE5E5E5</Color>

                            <!-- Done -->
                            <Style x:Key="DetailsTextBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="2"/>
                                <Setter Property="AllowDrop" Value="true"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1">
                                                <Grid>
                                                    <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                                    <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Template="{DynamicResource ScrollViewerControlTemplate1}" SnapsToDevicePixels="true"/>
                                                    </Border>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!-- Done -->
                            <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
                                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <!--<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>-->
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                    <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle}"/>
                                    <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource ScrollBarStyle}"/>
                                </Grid>
                            </ControlTemplate>

                            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="{StaticResource HoverColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="{StaticResource PressedColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Path x:Name="Arrow" Data="M0,7 L7,7 L3.5,0 z" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource StandardColor}"/>
                                                    </Path.Fill>
                                                </Path>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!-- Done -->
                            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!-- Done -->
                            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="{StaticResource HoverColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="VisualThumb" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="{StaticResource PressedColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="VisualThumb" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle>
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="{StaticResource BackgroundColor}"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="VisualThumb" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RadiusX="3.5" RadiusY="3.5">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="{StaticResource StandardColor}"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!-- Done -->
                            <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    <RowDefinition Height="0.00001*"/>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                </Grid.RowDefinitions>
                                                <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" />

                                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumb}" Width="7" />
                                                    </Track.Thumb>
                                                </Track>

                                                <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" RenderTransformOrigin="0.5,0.5">
                                                    <RepeatButton.RenderTransform>
                                                        <RotateTransform Angle="180" />
                                                    </RepeatButton.RenderTransform>
                                                </RepeatButton>
                                            </Grid>
                                            <!-- TODO -->
                                            <!--<ControlTemplate.Triggers>
												<Trigger Property="IsEnabled" Value="false">
													<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
												</Trigger>
											</ControlTemplate.Triggers>-->
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                            <ColumnDefinition Width="0.00001*"/>
                                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                        </Grid.ColumnDefinitions>
                                                        <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" RenderTransformOrigin="0.5,0.5">
                                                            <RepeatButton.RenderTransform>
                                                                <RotateTransform Angle="-90" />
                                                            </RepeatButton.RenderTransform>
                                                        </RepeatButton>
                                                        <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb Style="{StaticResource ScrollBarThumb}" Height="7" />
                                                            </Track.Thumb>
                                                        </Track>
                                                        <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" RenderTransformOrigin="0.5,0.5">
                                                            <RepeatButton.RenderTransform>
                                                                <RotateTransform Angle="90" />
                                                            </RepeatButton.RenderTransform>
                                                        </RepeatButton>
                                                    </Grid>
                                                    <!-- TODO -->
                                                    <!--<ControlTemplate.Triggers>
														<Trigger Property="IsEnabled" Value="false">
															<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
														</Trigger>
													</ControlTemplate.Triggers>-->
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                            <Style x:Key="NotificationShowDetailsButton" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">

                                            <Grid>

                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.2" To="#FF909090" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="Circle" />
                                                                <ColorAnimation Duration="0:0:0.2" To="#FFFDFFE3" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" Storyboard.TargetName="Circle" />
                                                                <ColorAnimation Duration="0:0:0.2" To="#FFF7F9DD" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" Storyboard.TargetName="Circle" />
                                                                <ColorAnimation Duration="0:0:0.2" To="#FFC7CAB1" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" Storyboard.TargetName="Circle" />
                                                                <ColorAnimation Duration="0:0:0.2" To="#FF707070" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Triangle" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisualElement"/>

                                                                <ColorAnimation Duration="0:0:0.2" To="#FF606060" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Triangle" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <Ellipse x:Name="Circle" Stroke="#FFA1A1A1" Width="16" Height="16" StrokeThickness="0.5">
                                                    <Ellipse.Fill>
                                                        <RadialGradientBrush>
                                                            <GradientStop Color="#FFFFFFFF"/>
                                                            <GradientStop Color="#FFFCFFDB" Offset="0.526"/>
                                                            <GradientStop Color="#FFE2E5CA" Offset="1"/>
                                                        </RadialGradientBrush>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <Ellipse x:Name="PressedVisualElement" Stroke="#FF707070" Width="16" Height="16" StrokeThickness="1" Opacity="0">
                                                    <Ellipse.Fill>
                                                        <RadialGradientBrush>
                                                            <GradientStop Color="#FFFDFFE3"/>
                                                            <GradientStop Color="#FFF7F9DD" Offset="0.526"/>
                                                            <GradientStop Color="#FFC7CAB1" Offset="1"/>
                                                        </RadialGradientBrush>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <ed:RegularPolygon x:Name="Triangle" Margin="1,2,1,1" InnerRadius="1" PointCount="3" Stretch="Fill" VerticalAlignment="Center" StrokeThickness="0" UseLayoutRounding="False" Width="9.625" Height="7" RenderTransformOrigin="0.5,0.5" Fill="#FF909090">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <RotateTransform Angle="-180" />
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>

                                            </Grid>

                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="NotificationCloseButton" TargetType="Button">
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="Foreground" Value="#FF000000"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Height" Value="16" />
                                <Setter Property="Width" Value="16" />
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.2" To="#FF333333" Storyboard.TargetProperty="Color" Storyboard.TargetName="ClosePathSolidColorBrush" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisualElement"/>
                                                                <ColorAnimation Duration="0:0:0.2" To="#FF333333" Storyboard.TargetProperty="Color" Storyboard.TargetName="ClosePathSolidColorBrush" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <Grid IsHitTestVisible="True" Margin="2" Background="Transparent">
                                                    <Path x:Name="ClosePath" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="0" Stroke="#FF333333" Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z">
                                                        <Path.Fill>
                                                            <SolidColorBrush x:Name="ClosePathSolidColorBrush" Color="#FF888888" />
                                                        </Path.Fill>
                                                    </Path>
                                                </Grid>

                                                <Rectangle x:Name="PressedVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="2"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </Grid.Resources>

                        <Grid x:Name="NotificationContainer" Height="0">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFBFFBA"/>
                                    <GradientStop Color="#FFFDFFE3" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="MessageTextBlock" Grid.Column="0" Margin="8,0,8,0" HorizontalAlignment="Left" TextWrapping="NoWrap" TextTrimming="WordEllipsis" Text="An error has occurred." VerticalAlignment="Center" />

                            <Grid Grid.Column="1">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Button x:Name="ShowDetailsButton" Grid.Column="0" Margin="0,0,8,0" VerticalAlignment="Center" Style="{StaticResource NotificationShowDetailsButton}">
                                    <Button.RenderTransform>
                                        <RotateTransform x:Name="ShowDetailsButtonCompositeTransform" CenterX="8" CenterY="8" />
                                    </Button.RenderTransform>
                                    <ToolTipService.ToolTip>
                                        <!-- TODO: Use resource string -->
                                        <TextBlock x:Name="ShowDetailsButtonToolTip" Text="Show details" />
                                    </ToolTipService.ToolTip>
                                </Button>

                                <Button x:Name="CloseButton" Grid.Column="1" Margin="0,0,8,0" VerticalAlignment="Center" Style="{StaticResource NotificationCloseButton}">
                                    <ToolTipService.ToolTip>
                                        <!-- TODO: Use resource string -->
                                        <TextBlock Text="Close" />
                                    </ToolTipService.ToolTip>
                                </Button>
                            </Grid>

                            <TextBox x:Name="DetailsTextBox" Height="0" Style="{StaticResource DetailsTextBoxStyle}" TextWrapping="NoWrap" AcceptsReturn="True" IsReadOnly="True" Grid.Row="1" Margin="8" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" />

                        </Grid>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>